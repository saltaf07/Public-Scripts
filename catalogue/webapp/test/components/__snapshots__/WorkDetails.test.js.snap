// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Feature: 2. As a library member I want to request an item 
    Scenario: I'm logged out, viewing a work page
      Given the work has a requestable item
      And it’s available to request
      Then I can see a primary CTA to log in
     1`] = `
<div
  data-test-id="libraryLoginCTA"
>
  <ButtonSolidLink
    clickHandler={[Function]}
    link="/loginUrl"
    text="Log in to request"
    trackingEvent={
      Object {
        "action": "follow Cognito login link",
        "category": "Button",
        "label": "{workId}",
      }
    }
  >
    <ConditionalWrapper
      condition={false}
      wrapper={[Function]}
    >
      <ButtonSolid__SolidButton
        href="/loginUrl"
        onClick={[Function]}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [
                [Function],
                [Function],
              ],
              "componentStyle": ComponentStyle {
                "componentId": "ButtonSolid__SolidButton-is2j2c-3",
                "isStatic": false,
                "lastClassName": "kcAXZg",
                "rules": Array [
                  "align-items:center;display:inline-flex;line-height:1;border-radius:",
                  [Function],
                  ";text-decoration:none;text-align:center;transition:background ",
                  [Function],
                  ",border-color ",
                  [Function],
                  ";border:0;white-space:nowrap;padding:13px 20px;cursor:pointer;&:focus{outline:0;.is-keyboard &{box-shadow:",
                  [Function],
                  ";}}&[disabled],&.disabled{background:",
                  [Function],
                  ";border-color:",
                  [Function],
                  ";color:",
                  [Function],
                  ";cursor:not-allowed;&:hover{text-decoration:none;}}&.disabled{pointer-events:none;}.icon__shape{transition:fill ",
                  [Function],
                  ";fill:currentColor;}.icon__stroke{transition:stroke ",
                  [Function],
                  ";stroke:currentColor;}",
                  "background:",
                  [Function],
                  ";color:",
                  [Function],
                  ";border:2px solid ",
                  [Function],
                  ";",
                  [Function],
                  " &:not([disabled]):hover{background:",
                  [Function],
                  ";border-color:",
                  [Function],
                  ";}",
                ],
              },
              "displayName": "ButtonSolid__SolidButton",
              "foldedComponentIds": Array [
                "ButtonSolid__BaseButton-is2j2c-0",
              ],
              "render": [Function],
              "styledComponentId": "ButtonSolid__SolidButton-is2j2c-3",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          href="/loginUrl"
          onClick={[Function]}
        >
          <a
            className="ButtonSolid__BaseButton-is2j2c-0 ButtonSolid__SolidButton-is2j2c-3 kcAXZg link-reset"
            href="/loginUrl"
            onClick={[Function]}
          >
            <ButtonSolid__BaseButtonInner>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "ButtonSolid__BaseButtonInner-is2j2c-1",
                      "isStatic": false,
                      "lastClassName": "dxoWEE",
                      "rules": Array [
                        "height:1em;",
                      ],
                    },
                    "displayName": "ButtonSolid__BaseButtonInner",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "ButtonSolid__BaseButtonInner-is2j2c-1",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="ButtonSolid__BaseButtonInner-is2j2c-1 dxoWEE font-hnm font-size-5  flex flex--v-center"
                >
                  Log in to request
                </span>
              </StyledComponent>
            </ButtonSolid__BaseButtonInner>
          </a>
        </StyledComponent>
      </ButtonSolid__SolidButton>
    </ConditionalWrapper>
  </ButtonSolidLink>
</div>
`;

exports[`Feature: 2. As a library member I want to request an item Scenario: I'm logged in, viewing a work page
  Given the work has a requestable item
  And it’s available to request
  Then I can see a primary CTA to request it 1`] = `
<div
  data-test-id="requestModalCTA"
>
  <ForwardRef
    clickHandler={[Function]}
    text="Request"
    trackingEvent={
      Object {
        "action": "open Stacks request modal window",
        "category": "Button",
        "label": "{workId}",
      }
    }
  >
    <ButtonSolid__SolidButton
      onClick={[Function]}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "ButtonSolid__SolidButton-is2j2c-3",
              "isStatic": false,
              "lastClassName": "kcAXZg",
              "rules": Array [
                "align-items:center;display:inline-flex;line-height:1;border-radius:",
                [Function],
                ";text-decoration:none;text-align:center;transition:background ",
                [Function],
                ",border-color ",
                [Function],
                ";border:0;white-space:nowrap;padding:13px 20px;cursor:pointer;&:focus{outline:0;.is-keyboard &{box-shadow:",
                [Function],
                ";}}&[disabled],&.disabled{background:",
                [Function],
                ";border-color:",
                [Function],
                ";color:",
                [Function],
                ";cursor:not-allowed;&:hover{text-decoration:none;}}&.disabled{pointer-events:none;}.icon__shape{transition:fill ",
                [Function],
                ";fill:currentColor;}.icon__stroke{transition:stroke ",
                [Function],
                ";stroke:currentColor;}",
                "background:",
                [Function],
                ";color:",
                [Function],
                ";border:2px solid ",
                [Function],
                ";",
                [Function],
                " &:not([disabled]):hover{background:",
                [Function],
                ";border-color:",
                [Function],
                ";}",
              ],
            },
            "displayName": "ButtonSolid__SolidButton",
            "foldedComponentIds": Array [
              "ButtonSolid__BaseButton-is2j2c-0",
            ],
            "render": [Function],
            "styledComponentId": "ButtonSolid__SolidButton-is2j2c-3",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={
          Object {
            "current": <button
              class="ButtonSolid__BaseButton-is2j2c-0 ButtonSolid__SolidButton-is2j2c-3 kcAXZg"
            >
              <span
                class="ButtonSolid__BaseButtonInner-is2j2c-1 dxoWEE font-hnm font-size-5  flex flex--v-center"
              >
                <span
                  class=""
                >
                  Request
                </span>
              </span>
            </button>,
          }
        }
        onClick={[Function]}
      >
        <button
          className="ButtonSolid__BaseButton-is2j2c-0 ButtonSolid__SolidButton-is2j2c-3 kcAXZg"
          onClick={[Function]}
        >
          <ButtonSolid__BaseButtonInner>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "ButtonSolid__BaseButtonInner-is2j2c-1",
                    "isStatic": false,
                    "lastClassName": "dxoWEE",
                    "rules": Array [
                      "height:1em;",
                    ],
                  },
                  "displayName": "ButtonSolid__BaseButtonInner",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "ButtonSolid__BaseButtonInner-is2j2c-1",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="ButtonSolid__BaseButtonInner-is2j2c-1 dxoWEE font-hnm font-size-5  flex flex--v-center"
              >
                <span
                  className=""
                >
                  Request
                </span>
              </span>
            </StyledComponent>
          </ButtonSolid__BaseButtonInner>
        </button>
      </StyledComponent>
    </ButtonSolid__SolidButton>
  </ForwardRef>
  <Modal
    id="requestModal"
    isActive={false}
    openButtonRef={
      Object {
        "current": <button
          class="ButtonSolid__BaseButton-is2j2c-0 ButtonSolid__SolidButton-is2j2c-3 kcAXZg"
        >
          <span
            class="ButtonSolid__BaseButtonInner-is2j2c-1 dxoWEE font-hnm font-size-5  flex flex--v-center"
          >
            <span
              class=""
            >
              Request
            </span>
          </span>
        </button>,
      }
    }
    setIsActive={[Function]}
  >
    <CSSTransition
      classNames="fade"
      in={false}
      timeout={350}
    >
      <Transition
        appear={false}
        enter={true}
        exit={true}
        in={false}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={350}
        unmountOnExit={false}
      >
        <Modal__ModalWindow
          hidden={true}
          id="requestModal"
          width={null}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  Object {
                    "className": "shadow bg-white",
                    "h": Object {
                      "properties": Array [
                        "padding-left",
                        "padding-right",
                      ],
                      "size": "xl",
                    },
                    "v": Object {
                      "properties": Array [
                        "padding-top",
                        "padding-bottom",
                      ],
                      "size": "xl",
                    },
                  },
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "Modal__ModalWindow-sc-12234yr-2",
                  "isStatic": false,
                  "lastClassName": "bUojOH",
                  "rules": Array [
                    [Function],
                    " ",
                    [Function],
                    "z-index:1001;top:0;bottom:0;left:0;right:0;position:fixed;overflow:auto;transition:opacity 350ms ease,transform 350ms ease;&,&.fade-exit-done{z-index:-1;pointer-events:none;}&.fade-enter,&.fade-exit,&.fade-enter-done{z-index:1001;pointer-events:all;}&,&.fade-enter,&.fade-exit-active,&.fade-exit-done{opacity:0;transform:scale(0.9);}&.fade-enter-active,&.fade-enter-done{opacity:1;transform:scale(1);}",
                    [Function],
                    " @media screen and (prefers-reduced-motion:reduce){transition:none;}",
                  ],
                },
                "displayName": "Modal__ModalWindow",
                "foldedComponentIds": Array [
                  "Space-sc-4az8w3-0",
                ],
                "render": [Function],
                "styledComponentId": "Modal__ModalWindow-sc-12234yr-2",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <div
                  class="Space-sc-4az8w3-0 Modal__ModalWindow-sc-12234yr-2 bUojOH shadow bg-white"
                  hidden=""
                  id="requestModal"
                >
                  <button
                    class="Space-sc-4az8w3-0 Modal__CloseButton-sc-12234yr-1 fXXAZK"
                  >
                    <span
                      class="visually-hidden"
                    >
                      Close modal window
                    </span>
                    <div
                      class="icon icon--currentColor"
                    >
                      <svg
                        aria-hidden="true"
                        class="icon__svg"
                      >
                        <svg
                          viewBox="0 0 24 24"
                        >
                          <path
                            class="icon__shape"
                            d="M18.7 17.3L13.4 12l5.3-5.3c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L12 10.6 6.7 5.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4l5.3 5.3-5.3 5.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0l5.3-5.3 5.3 5.3c.4.4 1 .4 1.4 0 .4-.4.4-1 0-1.4z"
                            fill-rule="nonzero"
                          />
                        </svg>
                      </svg>
                    </div>
                  </button>
                  <h2
                    class="font-hnm font-size-5 "
                  >
                    Request items
                  </h2>
                  <p
                    class="font-hnl font-size-5 "
                  >
                    You are about to request the following items:
                  </p>
                  <p
                    class="font-hnm font-size-6 "
                  >
                    Sir Joseph Banks : Royal Botanical Garden St. Vincent 1764-1820.
                  </p>
                  <ul
                    class="plain-list no-padding"
                  >
                    <li
                      class="font-hnm font-size-5 "
                    >
                      <span
                        class="Space-sc-4az8w3-0 jASawy font-hnl font-size-5 "
                      >
                        <label
                          class="visually-hidden"
                        >
                          Request 
                          {itemIdAvailable}
                        </label>
                        <label
                          class="CheckboxRadio__CheckboxRadioLabel-sc-18nuwsd-0 khImkW flex-inline flex--v-center"
                          for="{itemIdAvailable}"
                        >
                          <input
                            class="CheckboxRadio__CheckboxRadioInput-sc-18nuwsd-2 gJjorY"
                            id="{itemIdAvailable}"
                            name="{itemIdAvailable}"
                            type="checkbox"
                            value="{itemIdAvailable}"
                          />
                          <span
                            class="CheckboxRadio__CheckboxRadioBox-sc-18nuwsd-1 iiStfC flex-inline flex--v-center flex--h-center relative"
                            type="checkbox"
                          >
                            <div
                              class="icon "
                            >
                              <svg
                                aria-hidden="true"
                                class="icon__svg"
                              >
                                <svg
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    class="icon__shape"
                                    d="M21.13 6.64a1 1 0 0 0-1.41 0L10 16.34l-5-5a1 1 0 0 0-1.41 1.41l5.67 5.67a1 1 0 0 0 1.41 0l10.4-10.4a1 1 0 0 0 .06-1.38z"
                                    fill-rule="nonzero"
                                  />
                                </svg>
                              </svg>
                            </div>
                          </span>
                          <span
                            class="Space-sc-4az8w3-0 jVzdQF"
                          />
                        </label>
                      </span>
                      <span
                        class="Space-sc-4az8w3-0 bgszNB font-hnl font-size-5 "
                      >
                        Closed stores Biog. pam
                      </span>
                    </li>
                  </ul>
                  <div>
                    <button
                      class="ButtonSolid__BaseButton-is2j2c-0 ButtonSolid__SolidButton-is2j2c-3 kcAXZg"
                    >
                      <span
                        class="ButtonSolid__BaseButtonInner-is2j2c-1 dxoWEE font-hnm font-size-5  flex flex--v-center"
                      >
                        <span
                          class=""
                        >
                          Request to view in library
                        </span>
                      </span>
                    </button>
                    <button
                      class="plain-button"
                    >
                      <span
                        class="Space-sc-4az8w3-0 bgszNB font-hnl font-size-6 "
                      >
                        Cancel
                      </span>
                    </button>
                  </div>
                </div>,
              }
            }
            hidden={true}
            id="requestModal"
            width={null}
          >
            <div
              className="Space-sc-4az8w3-0 Modal__ModalWindow-sc-12234yr-2 bUojOH shadow bg-white"
              hidden={true}
              id="requestModal"
              width={null}
            >
              <Modal__CloseButton
                hideFocus={false}
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [
                        Object {
                          "as": "button",
                          "h": Object {
                            "properties": Array [
                              "left",
                            ],
                            "size": "m",
                          },
                          "v": Object {
                            "properties": Array [
                              "top",
                            ],
                            "size": "m",
                          },
                        },
                      ],
                      "componentStyle": ComponentStyle {
                        "componentId": "Modal__CloseButton-sc-12234yr-1",
                        "isStatic": false,
                        "lastClassName": "fXXAZK",
                        "rules": Array [
                          [Function],
                          " ",
                          [Function],
                          "position:fixed;width:28px;height:28px;border-radius:50%;appearance:none;background:rgba(0,0,0,0.7);color:",
                          [Function],
                          ";border:0;outline:0;z-index:1;&:focus{",
                          [Function],
                          "}.icon{position:absolute;left:50%;top:50%;transform:translateX(-50%) translateY(-50%);}",
                          [Function],
                        ],
                      },
                      "displayName": "Modal__CloseButton",
                      "foldedComponentIds": Array [
                        "Space-sc-4az8w3-0",
                      ],
                      "render": [Function],
                      "styledComponentId": "Modal__CloseButton-sc-12234yr-1",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={
                    Object {
                      "current": <button
                        class="Space-sc-4az8w3-0 Modal__CloseButton-sc-12234yr-1 fXXAZK"
                      >
                        <span
                          class="visually-hidden"
                        >
                          Close modal window
                        </span>
                        <div
                          class="icon icon--currentColor"
                        >
                          <svg
                            aria-hidden="true"
                            class="icon__svg"
                          >
                            <svg
                              viewBox="0 0 24 24"
                            >
                              <path
                                class="icon__shape"
                                d="M18.7 17.3L13.4 12l5.3-5.3c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L12 10.6 6.7 5.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4l5.3 5.3-5.3 5.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0l5.3-5.3 5.3 5.3c.4.4 1 .4 1.4 0 .4-.4.4-1 0-1.4z"
                                fill-rule="nonzero"
                              />
                            </svg>
                          </svg>
                        </div>
                      </button>,
                    }
                  }
                  hideFocus={false}
                  onClick={[Function]}
                >
                  <button
                    className="Space-sc-4az8w3-0 Modal__CloseButton-sc-12234yr-1 fXXAZK"
                    onClick={[Function]}
                  >
                    <span
                      className="visually-hidden"
                    >
                      Close modal window
                    </span>
                    <Icon
                      extraClasses="icon--currentColor"
                      name="cross"
                    >
                      <div
                        className="icon icon--currentColor"
                      >
                        <svg
                          aria-hidden={true}
                          className="icon__svg"
                        >
                          <svg
                            viewBox="0 0 24 24"
                          >
                            <path
                              className="icon__shape"
                              d="M18.7 17.3L13.4 12l5.3-5.3c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L12 10.6 6.7 5.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4l5.3 5.3-5.3 5.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0l5.3-5.3 5.3 5.3c.4.4 1 .4 1.4 0 .4-.4.4-1 0-1.4z"
                              fillRule="nonzero"
                            />
                          </svg>
                        </svg>
                      </div>
                    </Icon>
                  </button>
                </StyledComponent>
              </Modal__CloseButton>
              <h2
                className="font-hnm font-size-5 "
              >
                Request items
              </h2>
              <p
                className="font-hnl font-size-5 "
              >
                You are about to request the following items:
              </p>
              <p
                className="font-hnm font-size-6 "
              >
                Sir Joseph Banks : Royal Botanical Garden St. Vincent 1764-1820.
              </p>
              <ul
                className="plain-list no-padding"
              >
                <li
                  className="font-hnm font-size-5 "
                  key="{itemIdAvailable}"
                >
                  <Space
                    as="span"
                    className="font-hnl font-size-5 "
                    h={
                      Object {
                        "properties": Array [
                          "margin-right",
                        ],
                        "size": "s",
                      }
                    }
                  >
                    <StyledComponent
                      as="span"
                      className="font-hnl font-size-5 "
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Space-sc-4az8w3-0",
                            "isStatic": false,
                            "lastClassName": "bgszNB",
                            "rules": Array [
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "Space",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Space-sc-4az8w3-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      h={
                        Object {
                          "properties": Array [
                            "margin-right",
                          ],
                          "size": "s",
                        }
                      }
                    >
                      <span
                        className="Space-sc-4az8w3-0 jASawy font-hnl font-size-5 "
                      >
                        <label
                          className="visually-hidden"
                        >
                          Request 
                          {itemIdAvailable}
                        </label>
                        <CheckboxRadio
                          checked={true}
                          id="{itemIdAvailable}"
                          name="{itemIdAvailable}"
                          onChange={[Function]}
                          text=""
                          type="checkbox"
                          value="{itemIdAvailable}"
                        >
                          <CheckboxRadio__CheckboxRadioLabel
                            htmlFor="{itemIdAvailable}"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [
                                    Object {
                                      "className": "flex-inline flex--v-center",
                                    },
                                  ],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "CheckboxRadio__CheckboxRadioLabel-sc-18nuwsd-0",
                                    "isStatic": false,
                                    "lastClassName": "khImkW",
                                    "rules": Array [
                                      "cursor:pointer;",
                                    ],
                                  },
                                  "displayName": "CheckboxRadio__CheckboxRadioLabel",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "CheckboxRadio__CheckboxRadioLabel-sc-18nuwsd-0",
                                  "target": "label",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              htmlFor="{itemIdAvailable}"
                            >
                              <label
                                className="CheckboxRadio__CheckboxRadioLabel-sc-18nuwsd-0 khImkW flex-inline flex--v-center"
                                htmlFor="{itemIdAvailable}"
                              >
                                <CheckboxRadio__CheckboxRadioInput
                                  checked={true}
                                  hideFocus={false}
                                  id="{itemIdAvailable}"
                                  name="{itemIdAvailable}"
                                  onChange={[Function]}
                                  type="checkbox"
                                  value="{itemIdAvailable}"
                                >
                                  <StyledComponent
                                    checked={true}
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [
                                          [Function],
                                        ],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "CheckboxRadio__CheckboxRadioInput-sc-18nuwsd-2",
                                          "isStatic": false,
                                          "lastClassName": "gJjorY",
                                          "rules": Array [
                                            "position:absolute;opacity:0;z-index:1;width:1em;height:1em;&:checked ~ ",
                                            ".CheckboxRadio__CheckboxRadioBox-sc-18nuwsd-1",
                                            "{border-color:",
                                            [Function],
                                            ";.icon{opacity:1;}}&:hover ~ ",
                                            ".CheckboxRadio__CheckboxRadioBox-sc-18nuwsd-1",
                                            "{border-color:",
                                            [Function],
                                            ";}.is-keyboard &{&:focus ~ ",
                                            ".CheckboxRadio__CheckboxRadioBox-sc-18nuwsd-1",
                                            "{outline:0;box-shadow:",
                                            [Function],
                                            ";border-color:",
                                            [Function],
                                            ";}}",
                                          ],
                                        },
                                        "displayName": "CheckboxRadio__CheckboxRadioInput",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "CheckboxRadio__CheckboxRadioInput-sc-18nuwsd-2",
                                        "target": "input",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    hideFocus={false}
                                    id="{itemIdAvailable}"
                                    name="{itemIdAvailable}"
                                    onChange={[Function]}
                                    type="checkbox"
                                    value="{itemIdAvailable}"
                                  >
                                    <input
                                      checked={true}
                                      className="CheckboxRadio__CheckboxRadioInput-sc-18nuwsd-2 gJjorY"
                                      id="{itemIdAvailable}"
                                      name="{itemIdAvailable}"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value="{itemIdAvailable}"
                                    />
                                  </StyledComponent>
                                </CheckboxRadio__CheckboxRadioInput>
                                <CheckboxRadio__CheckboxRadioBox
                                  type="checkbox"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [
                                          Object {
                                            "className": "flex-inline flex--v-center flex--h-center relative",
                                          },
                                        ],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "CheckboxRadio__CheckboxRadioBox-sc-18nuwsd-1",
                                          "isStatic": false,
                                          "lastClassName": "iiStfC",
                                          "rules": Array [
                                            "width:1.3em;height:1.3em;border:2px solid ",
                                            [Function],
                                            ";border-radius:",
                                            [Function],
                                            ";.icon{position:absolute;opacity:0;width:100%;height:100%;}",
                                          ],
                                        },
                                        "displayName": "CheckboxRadio__CheckboxRadioBox",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "CheckboxRadio__CheckboxRadioBox-sc-18nuwsd-1",
                                        "target": "span",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    type="checkbox"
                                  >
                                    <span
                                      className="CheckboxRadio__CheckboxRadioBox-sc-18nuwsd-1 iiStfC flex-inline flex--v-center flex--h-center relative"
                                      type="checkbox"
                                    >
                                      <Icon
                                        name="check"
                                      >
                                        <div
                                          className="icon "
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="icon__svg"
                                          >
                                            <svg
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                className="icon__shape"
                                                d="M21.13 6.64a1 1 0 0 0-1.41 0L10 16.34l-5-5a1 1 0 0 0-1.41 1.41l5.67 5.67a1 1 0 0 0 1.41 0l10.4-10.4a1 1 0 0 0 .06-1.38z"
                                                fillRule="nonzero"
                                              />
                                            </svg>
                                          </svg>
                                        </div>
                                      </Icon>
                                    </span>
                                  </StyledComponent>
                                </CheckboxRadio__CheckboxRadioBox>
                                <Space
                                  as="span"
                                  h={
                                    Object {
                                      "properties": Array [
                                        "margin-left",
                                      ],
                                      "size": "xs",
                                    }
                                  }
                                >
                                  <StyledComponent
                                    as="span"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Space-sc-4az8w3-0",
                                          "isStatic": false,
                                          "lastClassName": "bgszNB",
                                          "rules": Array [
                                            [Function],
                                            " ",
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Space",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Space-sc-4az8w3-0",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    h={
                                      Object {
                                        "properties": Array [
                                          "margin-left",
                                        ],
                                        "size": "xs",
                                      }
                                    }
                                  >
                                    <span
                                      className="Space-sc-4az8w3-0 jVzdQF"
                                    />
                                  </StyledComponent>
                                </Space>
                              </label>
                            </StyledComponent>
                          </CheckboxRadio__CheckboxRadioLabel>
                        </CheckboxRadio>
                      </span>
                    </StyledComponent>
                  </Space>
                  <Space
                    as="span"
                    className="font-hnl font-size-5 "
                    h={
                      Object {
                        "properties": Array [
                          "margin-left",
                        ],
                        "size": "l",
                      }
                    }
                  >
                    <StyledComponent
                      as="span"
                      className="font-hnl font-size-5 "
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Space-sc-4az8w3-0",
                            "isStatic": false,
                            "lastClassName": "bgszNB",
                            "rules": Array [
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "Space",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Space-sc-4az8w3-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      h={
                        Object {
                          "properties": Array [
                            "margin-left",
                          ],
                          "size": "l",
                        }
                      }
                    >
                      <span
                        className="Space-sc-4az8w3-0 bgszNB font-hnl font-size-5 "
                      >
                        Closed stores Biog. pam
                      </span>
                    </StyledComponent>
                  </Space>
                </li>
              </ul>
              <div>
                <ItemRequestButton
                  itemsWithPhysicalLocations={
                    Array [
                      Object {
                        "checked": true,
                        "dueDate": "{dueDate}",
                        "id": "{itemIdAvailable}",
                        "identifiers": Array [
                          Object {
                            "identifierType": Object {
                              "id": "sierra-system-number",
                              "label": "Sierra system number",
                              "type": "IdentifierType",
                            },
                            "type": "Identifier",
                            "value": "i10187431",
                          },
                          Object {
                            "identifierType": Object {
                              "id": "sierra-identifier",
                              "label": "Sierra identifier",
                              "type": "IdentifierType",
                            },
                            "type": "Identifier",
                            "value": "1018743",
                          },
                        ],
                        "locations": Array [
                          Object {
                            "accessConditions": Array [],
                            "label": "Closed stores Biog. pam",
                            "locationType": Object {
                              "id": "sgpbi",
                              "label": "Closed stores Biog. pam",
                              "type": "LocationType",
                            },
                            "type": "PhysicalLocation",
                          },
                        ],
                        "requestable": true,
                        "status": Object {
                          "id": "-",
                          "label": "Available",
                          "type": "ItemStatus",
                        },
                        "type": "Item",
                      },
                    ]
                  }
                  setItemsWithPhysicalLocations={[Function]}
                  setShowRequestModal={[Function]}
                  setShowResultsModal={[Function]}
                >
                  <ForwardRef
                    clickHandler={[Function]}
                    text="Request to view in library"
                    trackingEvent={
                      Object {
                        "action": "confirm Stacks request",
                        "category": "Button",
                        "label": "item id(s): {itemIdAvailable}",
                      }
                    }
                  >
                    <ButtonSolid__SolidButton
                      onClick={[Function]}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [
                              [Function],
                              [Function],
                            ],
                            "componentStyle": ComponentStyle {
                              "componentId": "ButtonSolid__SolidButton-is2j2c-3",
                              "isStatic": false,
                              "lastClassName": "kcAXZg",
                              "rules": Array [
                                "align-items:center;display:inline-flex;line-height:1;border-radius:",
                                [Function],
                                ";text-decoration:none;text-align:center;transition:background ",
                                [Function],
                                ",border-color ",
                                [Function],
                                ";border:0;white-space:nowrap;padding:13px 20px;cursor:pointer;&:focus{outline:0;.is-keyboard &{box-shadow:",
                                [Function],
                                ";}}&[disabled],&.disabled{background:",
                                [Function],
                                ";border-color:",
                                [Function],
                                ";color:",
                                [Function],
                                ";cursor:not-allowed;&:hover{text-decoration:none;}}&.disabled{pointer-events:none;}.icon__shape{transition:fill ",
                                [Function],
                                ";fill:currentColor;}.icon__stroke{transition:stroke ",
                                [Function],
                                ";stroke:currentColor;}",
                                "background:",
                                [Function],
                                ";color:",
                                [Function],
                                ";border:2px solid ",
                                [Function],
                                ";",
                                [Function],
                                " &:not([disabled]):hover{background:",
                                [Function],
                                ";border-color:",
                                [Function],
                                ";}",
                              ],
                            },
                            "displayName": "ButtonSolid__SolidButton",
                            "foldedComponentIds": Array [
                              "ButtonSolid__BaseButton-is2j2c-0",
                            ],
                            "render": [Function],
                            "styledComponentId": "ButtonSolid__SolidButton-is2j2c-3",
                            "target": "button",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                      >
                        <button
                          className="ButtonSolid__BaseButton-is2j2c-0 ButtonSolid__SolidButton-is2j2c-3 kcAXZg"
                          onClick={[Function]}
                        >
                          <ButtonSolid__BaseButtonInner>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [
                                    [Function],
                                  ],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "ButtonSolid__BaseButtonInner-is2j2c-1",
                                    "isStatic": false,
                                    "lastClassName": "dxoWEE",
                                    "rules": Array [
                                      "height:1em;",
                                    ],
                                  },
                                  "displayName": "ButtonSolid__BaseButtonInner",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "ButtonSolid__BaseButtonInner-is2j2c-1",
                                  "target": "span",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <span
                                className="ButtonSolid__BaseButtonInner-is2j2c-1 dxoWEE font-hnm font-size-5  flex flex--v-center"
                              >
                                <span
                                  className=""
                                >
                                  Request to view in library
                                </span>
                              </span>
                            </StyledComponent>
                          </ButtonSolid__BaseButtonInner>
                        </button>
                      </StyledComponent>
                    </ButtonSolid__SolidButton>
                  </ForwardRef>
                </ItemRequestButton>
                <button
                  className="plain-button"
                  onClick={[Function]}
                >
                  <Space
                    as="span"
                    className="font-hnl font-size-6 "
                    h={
                      Object {
                        "properties": Array [
                          "margin-left",
                        ],
                        "size": "l",
                      }
                    }
                  >
                    <StyledComponent
                      as="span"
                      className="font-hnl font-size-6 "
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Space-sc-4az8w3-0",
                            "isStatic": false,
                            "lastClassName": "bgszNB",
                            "rules": Array [
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "Space",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Space-sc-4az8w3-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      h={
                        Object {
                          "properties": Array [
                            "margin-left",
                          ],
                          "size": "l",
                        }
                      }
                    >
                      <span
                        className="Space-sc-4az8w3-0 bgszNB font-hnl font-size-6 "
                      >
                        Cancel
                      </span>
                    </StyledComponent>
                  </Space>
                </button>
              </div>
            </div>
          </StyledComponent>
        </Modal__ModalWindow>
      </Transition>
    </CSSTransition>
  </Modal>
</div>
`;

exports[`Feature: 2. As a library member I want to request an item Scenario: I'm logged out, viewing a work page
      Given the work has a requestable item
      And it’s unavailable to request
      Then I can't see a primary CTA to log in 1`] = `null`;
